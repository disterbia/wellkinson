// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin-login": {
            "post": {
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "description": "관리자 로그인시 호출",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "로그인 /user"
                ],
                "summary": "관리자 로그인",
                "parameters": [
                    {
                        "description": "email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공시 JWT 토큰 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auto-login": {
            "post": {
                "security": [
                    {
                        "jwt": []
                    }
                ],
                "description": "최초 로그인 이후 앱 실행시 호출",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "로그인 /user"
                ],
                "summary": "자동로그인",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {jwt_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공시 JWT 토큰 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/get-user": {
            "post": {
                "description": "내 정보 조회시 호출",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "회원조회(본인)  /user"
                ],
                "summary": "유저 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {jwt_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공시 유저 객체 반환/ ture:남성",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/google-login": {
            "post": {
                "description": "구글로그인 성공시 호출",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "로그인 /user"
                ],
                "summary": "구글로그인",
                "parameters": [
                    {
                        "description": "요청 DTO - idToken,기본값 데이터",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공시 JWT 토큰 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/kakao-login": {
            "post": {
                "description": "카카오로그인 성공시 호출",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "로그인 /user"
                ],
                "summary": "카카오로그인",
                "parameters": [
                    {
                        "description": "요청 DTO - dToken,기본값 데이터",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공시 JWT 토큰 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/set-user": {
            "post": {
                "description": "유저 상태영구변경시 호출",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "회원상태 변경(본인)  /user"
                ],
                "summary": "유저 데이터 변경",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {jwt_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "요청 DTO - 업데이트 할 데이터/ ture:남성",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공시 200 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "요청 처리 실패시 오류 메시지 반환",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BasicResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "err": {
                    "type": "string"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserRequest"
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "dto.UserRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                "device_id": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "gender": {
                    "description": "true:남 false: 여",
                    "type": "boolean"
                },
                "is_first": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone_num": {
                    "type": "string",
                    "example": "01000000000"
                },
                "use_auto_login": {
                    "type": "boolean"
                },
                "use_sleep_tracking": {
                    "type": "boolean"
                },
                "user_privacy_protection": {
                    "type": "boolean"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                "created": {
                    "type": "string",
                    "example": "YYYY-mm-ddTHH:mm:ssZ (ISO8601) "
                },
                "device_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "gender": {
                    "description": "true:남 false: 여",
                    "type": "boolean"
                },
                "is_first": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone_num": {
                    "type": "string",
                    "example": "01000000000"
                },
                "updated": {
                    "type": "string",
                    "example": "YYYY-mm-ddTHH:mm:ssZ (ISO8601) "
                },
                "use_auto_login": {
                    "type": "boolean"
                },
                "use_sleep_tracking": {
                    "type": "boolean"
                },
                "user_privacy_protection": {
                    "type": "boolean"
                },
                "user_type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
